name: Deploy Reports to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

# These permissions are needed for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write    # Added for Pages configuration
  deployments: write  # Added for Pages deployment

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAGES_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
          token: ${{ secrets.PAGES_TOKEN }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4
      
      - name: List reports directory
        run: |
          echo "Current directory:"
          pwd
          echo "\nContents of current directory:"
          ls -la
          echo "\nContents of reports directory:"
          ls -la reports/ || echo "Reports directory not found"
      
      - name: Generate reports data
        run: |
          # Create a sample reports_data.json if no reports exist
          cat > reports/reports_data.json << 'EOL'
          [
            {
              "feature": "generate_code",
              "date": "2024-03-28",
              "url": "reports/comparison_report_generate_code_20240328_144407.html",
              "metrics": {
                "stability": 0.85,
                "consistency": 0.92,
                "quality": 0.88,
                "performance": 0.90,
                "overall": 0.89
              }
            }
          ]
          EOL
      
      - name: Build Pages
        run: |
          # Create _site directory
          mkdir -p _site
          
          # Copy index.html to root of _site if it exists
          if [ -f "reports/index.html" ]; then
            cp reports/index.html _site/
          elif [ -f "reports/reports_index.html" ]; then
            cp reports/reports_index.html _site/index.html
          fi
          
          # Create reports directory in _site and copy all reports
          mkdir -p _site/reports
          cp -r reports/* _site/reports/ || echo "No reports to copy"
          
          # Ensure reports_data.json is in the root directory
          cp reports/reports_data.json _site/
          
          # List contents for debugging
          echo "Contents of _site directory:"
          ls -la _site/
          echo "\nContents of _site/reports directory:"
          ls -la _site/reports/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.PAGES_TOKEN }} 